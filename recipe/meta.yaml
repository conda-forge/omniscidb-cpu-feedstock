{% set name = "omniscidb-cpu" %}
{% set version = "5.0.0" %}
{% set sha256 = "3115261258059f8ad61efc802cd6c13e8c0d62a07621ebcfad55bb6f8ceaa0ed" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/omnisci/omniscidb/archive/v{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 2
  skip: True  # [win]

requirements:
  build:
    # In OSX, we use clang++ from clangdev as a compiler
    - {{ compiler('cxx') }}   # [not osx]
    - {{ compiler('c') }}     # [not osx]
    - boost-cpp 1.68.*        # to avoid cmake picking up boost-cpp 1.70+
    - cmake 3.14.*
    - make
    - go
    - maven
  host:
    - {{ compiler('cxx') }}    # [not osx]
    - {{ compiler('c') }}      # [not osx]
    - boost-cpp 1.68.*
    - llvmdev
    - clangdev
    - double-conversion
    - snappy
    - gflags
    - glog
    - libarchive
    - libkml
    - libpng
    - blosc
    - libgdal >=2.3.*,<3
    - arrow-cpp >=0.13.0
    - thrift-cpp >=0.11.0
    - ncurses
    - flex
    - bisonpp
    - openssl
    - librdkafka
  run:
    - boost-cpp 1.68.*
    - arrow-cpp >=0.13.0
    - snappy
    - double-conversion
    - libgdal >=2.3.*,<3
    - glog
    - gflags
    - openjdk 8.*
    - ncurses
    - xz
    - bzip2
    - zlib
    - librdkafka
    # omnscidb UDF support calls clang++ in loadtime
    - {{ compiler('cxx') }}   # [not osx]
    - llvmdev
    - clangdev


about:
  home: https://www.omnisci.com/
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE.md
  summary: 'The OmniSci database'

  description: |
    OmniSciDB is an in-memory, column store, SQL relational database 
    that was designed from the ground up to run on GPUs.
  doc_url: https://www.omnisci.com/docs/latest/
  dev_url: https://github.com/omnisci/omniscidb

extra:
  recipe-maintainers:
    - xmnlab
    - pearu
    - andrewseidl
